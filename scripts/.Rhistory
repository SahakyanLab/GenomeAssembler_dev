title <- ggdraw() + draw_label(
paste0("Seq Length: ",length,"; ",
"Kmer: ",kmer,"; ",
"Read Length: ",readLengthSeq[i]), fontface='bold')
# rel_heights values control title margins
combined.plots <- plot_grid(title, combined.plots, ncol=1, rel_heights=c(0.1, 1))
ggsave(combined.plots, width=10, height=6,
file=paste0("../figures/BP-Score_vs_Seq-Length/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# Plots of correlation coefficients of breakage probability scores vs.
# alignment scoring metrics
p1 <- ggplot(results[[1]], aes(x = probs, y = local)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$local,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[1]), "Alignment"))
p2 <- ggplot(results[[1]], aes(x = probs, y = global)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$global,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[2]), "Alignment"))
p3 <- ggplot(results[[1]], aes(x = probs, y = global.local)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$global.local,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability",
y = paste(str_to_title(gsub("[.]", "-", names(results[[2]])[3])), "Alignment"))
p4 <- ggplot(results[[1]], aes(x = probs, y = local.global)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$local.global,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability",
y = paste(str_to_title(gsub("[.]", "-", names(results[[2]])[4])), "Alignment"))
p5 <- ggplot(results[[1]], aes(x = probs, y = kmer)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$kmer,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[5]), "Alignment"))
# p6 <- ggplot(results[[1]], aes(x = probs, y = levenshtein)) + geom_point() +
#   geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
#                               annotateText = paste0("r = ", round(results[[2]]$levenshtein,4)),
#                               hjustvar = 0, vjustvar = 1),
#             aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
#             fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
#   labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[6]), "Alignment"))
title <- ggdraw() + draw_label(
paste0("Correlation Coefficients of Breakage Probability Scores vs. Alignment Scores",
"\n",
"Seq Length: ",length,"; ",
"Kmer: ",kmer,"; ",
"Read Length: ",readLengthSeq[i]), fontface='bold')
combined.cor.plots <- plot_grid(p1, p2, p5,
p4, p3,
nrow = 2)
# rel_heights values control title margins
combined.cor.plots <- plot_grid(title, combined.cor.plots, ncol = 1, rel_heights = c(0.1, 1))
ggsave(combined.cor.plots, width=10, height=6,
file=paste0("../figures/Correlations/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# Stacked barplot showing the percent of correctness of breakpoints vs.
# each alignment metric; we define "correctness" as a breakpoint score that is
# equal to or greater than the alignment score
percent.correctness <- ggplot(results[[5]], aes(x = ind, y = value, fill = variable)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Alignment Scores Metrics", y = "Percent of correctness",
title = "Percent of correctness between breakpoints and alignment scores")
ggsave(percent.correctness, width=10, height=6,
file=paste0("../figures/Alignment_scores/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# density plot of read lengths
p <- ggplot(results[[6]], aes(x=reads)) +
geom_density() + lims(x = c(min(results[[6]])*0.75,max(results[[6]])*1.25)) +
labs(x = "Read Length", y = "Density",
title = "Distribution of read lengths")
ggsave(p, width=10, height=6,
file=paste0("../figures/ReadLength/ReadLength-dist-",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
}
for(i in 1:length(readLengthSeq)){
results <- pearson.correlation(
len = length,
G.cont = human.atgc.df$G.cont,
C.cont = human.atgc.df$C.cont,
A.cont = human.atgc.df$A.cont,
timer = 1,
k = kmer, NCPU = NCPU,
max.runs = max.runs,
length.of.read = readLengthSeq[i],
multiplier = multiplierSeq[i],
prob.type = "non-uniform",
seed = 424242)
if(i==1){
cor.df <- data.frame(results[[2]])
} else {
cor.df <- rbind(cor.df, results[[2]])
}
if(i==length(readLengthSeq)){
write.csv(cor.df, file = "../data/correlation-coefficient-df.csv",
row.names = FALSE)
}
# Plots of assembled sequence length distribution vs. breakage prob scores
sorted.len  <- sort(results[[3]]$assembled.seq, decreasing = TRUE)
sorted.len  <- unique(sorted.len)[1]
top.results <- as.numeric(rownames(results[[3]][which(results[[3]]$assembled.seq==sorted.len),]))
p.seq <- ggplot(results[[3]],
aes(x = prob.table, y = assembled.seq)) + geom_point() +
geom_point(data=results[[3]][top.results,],
aes(x = prob.table, y = assembled.seq), colour="red") +
labs(x = "Breakage Probability Scores", y = "Assembled Sequence Length")
p.seq <- ggMarginal(p.seq, margins = "y", type="density",
colour = "black", fill = "black", alpha = .3)
p.align.probs <- ggplot(results[[3]],
aes(x = prob.table, y = total.align.score)) + geom_point() +
geom_point(data=results[[3]][top.results,],
aes(x = prob.table, y = total.align.score), colour="red") +
labs(x = "Breakage Probability Scores", y = "Reference Alignment Scores")
combined.plots <- plot_grid(p.seq, NULL, p.align.probs,
nrow = 1,
rel_widths = c(1, 0.05, 1),
labels = c("A", "", "B"))
title <- ggdraw() + draw_label(
paste0("Seq Length: ",length,"; ",
"Kmer: ",kmer,"; ",
"Read Length: ",readLengthSeq[i]), fontface='bold')
# rel_heights values control title margins
combined.plots <- plot_grid(title, combined.plots, ncol=1, rel_heights=c(0.1, 1))
ggsave(combined.plots, width=10, height=6,
file=paste0("../figures/BP-Score_vs_Seq-Length/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# Plots of correlation coefficients of breakage probability scores vs.
# alignment scoring metrics
p1 <- ggplot(results[[1]], aes(x = probs, y = local)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$local,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[1]), "Alignment"))
p2 <- ggplot(results[[1]], aes(x = probs, y = global)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$global,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[2]), "Alignment"))
p3 <- ggplot(results[[1]], aes(x = probs, y = global.local)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$global.local,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability",
y = paste(str_to_title(gsub("[.]", "-", names(results[[2]])[3])), "Alignment"))
p4 <- ggplot(results[[1]], aes(x = probs, y = local.global)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$local.global,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability",
y = paste(str_to_title(gsub("[.]", "-", names(results[[2]])[4])), "Alignment"))
p5 <- ggplot(results[[1]], aes(x = probs, y = kmer)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$kmer,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[5]), "Alignment"))
# p6 <- ggplot(results[[1]], aes(x = probs, y = levenshtein)) + geom_point() +
#   geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
#                               annotateText = paste0("r = ", round(results[[2]]$levenshtein,4)),
#                               hjustvar = 0, vjustvar = 1),
#             aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
#             fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
#   labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[6]), "Alignment"))
title <- ggdraw() + draw_label(
paste0("Correlation Coefficients of Breakage Probability Scores vs. Alignment Scores",
"\n",
"Seq Length: ",length,"; ",
"Kmer: ",kmer,"; ",
"Read Length: ",readLengthSeq[i]), fontface='bold')
combined.cor.plots <- plot_grid(p1, p2, p5,
p4, p3,
nrow = 2)
# rel_heights values control title margins
combined.cor.plots <- plot_grid(title, combined.cor.plots, ncol = 1, rel_heights = c(0.1, 1))
ggsave(combined.cor.plots, width=10, height=6,
file=paste0("../figures/Correlations/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# Stacked barplot showing the percent of correctness of breakpoints vs.
# each alignment metric; we define "correctness" as a breakpoint score that is
# equal to or greater than the alignment score
percent.correctness <- ggplot(results[[5]], aes(x = ind, y = value, fill = variable)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Alignment Scores Metrics", y = "Percent of correctness",
title = "Percent of correctness between breakpoints and alignment scores")
ggsave(percent.correctness, width=10, height=6,
file=paste0("../figures/Alignment_scores/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# density plot of read lengths
p <- ggplot(results[[6]], aes(x=reads)) +
geom_density() + lims(x = c(min(results[[6]])*0.75,max(results[[6]])*1.25)) +
labs(x = "Read Length", y = "Density",
title = "Distribution of read lengths")
ggsave(p, width=10, height=6,
file=paste0("../figures/ReadLength/ReadLength-dist-",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
}
for(i in 1:length(readLengthSeq)){
results <- pearson.correlation(
len = length,
G.cont = human.atgc.df$G.cont,
C.cont = human.atgc.df$C.cont,
A.cont = human.atgc.df$A.cont,
timer = 1,
k = kmer, NCPU = NCPU,
max.runs = max.runs,
length.of.read = readLengthSeq[i],
multiplier = multiplierSeq[i],
prob.type = "non-uniform",
seed = 1935)
if(i==1){
cor.df <- data.frame(results[[2]])
} else {
cor.df <- rbind(cor.df, results[[2]])
}
if(i==length(readLengthSeq)){
write.csv(cor.df, file = "../data/correlation-coefficient-df.csv",
row.names = FALSE)
}
# Plots of assembled sequence length distribution vs. breakage prob scores
sorted.len  <- sort(results[[3]]$assembled.seq, decreasing = TRUE)
sorted.len  <- unique(sorted.len)[1]
top.results <- as.numeric(rownames(results[[3]][which(results[[3]]$assembled.seq==sorted.len),]))
p.seq <- ggplot(results[[3]],
aes(x = prob.table, y = assembled.seq)) + geom_point() +
geom_point(data=results[[3]][top.results,],
aes(x = prob.table, y = assembled.seq), colour="red") +
labs(x = "Breakage Probability Scores", y = "Assembled Sequence Length")
p.seq <- ggMarginal(p.seq, margins = "y", type="density",
colour = "black", fill = "black", alpha = .3)
p.align.probs <- ggplot(results[[3]],
aes(x = prob.table, y = total.align.score)) + geom_point() +
geom_point(data=results[[3]][top.results,],
aes(x = prob.table, y = total.align.score), colour="red") +
labs(x = "Breakage Probability Scores", y = "Reference Alignment Scores")
combined.plots <- plot_grid(p.seq, NULL, p.align.probs,
nrow = 1,
rel_widths = c(1, 0.05, 1),
labels = c("A", "", "B"))
title <- ggdraw() + draw_label(
paste0("Seq Length: ",length,"; ",
"Kmer: ",kmer,"; ",
"Read Length: ",readLengthSeq[i]), fontface='bold')
# rel_heights values control title margins
combined.plots <- plot_grid(title, combined.plots, ncol=1, rel_heights=c(0.1, 1))
ggsave(combined.plots, width=10, height=6,
file=paste0("../figures/BP-Score_vs_Seq-Length/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# Plots of correlation coefficients of breakage probability scores vs.
# alignment scoring metrics
p1 <- ggplot(results[[1]], aes(x = probs, y = local)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$local,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[1]), "Alignment"))
p2 <- ggplot(results[[1]], aes(x = probs, y = global)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$global,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[2]), "Alignment"))
p3 <- ggplot(results[[1]], aes(x = probs, y = global.local)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$global.local,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability",
y = paste(str_to_title(gsub("[.]", "-", names(results[[2]])[3])), "Alignment"))
p4 <- ggplot(results[[1]], aes(x = probs, y = local.global)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$local.global,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability",
y = paste(str_to_title(gsub("[.]", "-", names(results[[2]])[4])), "Alignment"))
p5 <- ggplot(results[[1]], aes(x = probs, y = kmer)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$kmer,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[5]), "Alignment"))
# p6 <- ggplot(results[[1]], aes(x = probs, y = levenshtein)) + geom_point() +
#   geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
#                               annotateText = paste0("r = ", round(results[[2]]$levenshtein,4)),
#                               hjustvar = 0, vjustvar = 1),
#             aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
#             fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
#   labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[6]), "Alignment"))
title <- ggdraw() + draw_label(
paste0("Correlation Coefficients of Breakage Probability Scores vs. Alignment Scores",
"\n",
"Seq Length: ",length,"; ",
"Kmer: ",kmer,"; ",
"Read Length: ",readLengthSeq[i]), fontface='bold')
combined.cor.plots <- plot_grid(p1, p2, p5,
p4, p3,
nrow = 2)
# rel_heights values control title margins
combined.cor.plots <- plot_grid(title, combined.cor.plots, ncol = 1, rel_heights = c(0.1, 1))
ggsave(combined.cor.plots, width=10, height=6,
file=paste0("../figures/Correlations/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# Stacked barplot showing the percent of correctness of breakpoints vs.
# each alignment metric; we define "correctness" as a breakpoint score that is
# equal to or greater than the alignment score
percent.correctness <- ggplot(results[[5]], aes(x = ind, y = value, fill = variable)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Alignment Scores Metrics", y = "Percent of correctness",
title = "Percent of correctness between breakpoints and alignment scores")
ggsave(percent.correctness, width=10, height=6,
file=paste0("../figures/Alignment_scores/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# density plot of read lengths
p <- ggplot(results[[6]], aes(x=reads)) +
geom_density() + lims(x = c(min(results[[6]])*0.75,max(results[[6]])*1.25)) +
labs(x = "Read Length", y = "Density",
title = "Distribution of read lengths")
ggsave(p, width=10, height=6,
file=paste0("../figures/ReadLength/ReadLength-dist-",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
}
readLengthSeq <- c(15, 30, 60, 90, 100, 120)
multiplierSeq <- c(15000, 1800, 60, 90, 53, 32)
for(i in 1:length(readLengthSeq)){
results <- pearson.correlation(
len = length,
G.cont = human.atgc.df$G.cont,
C.cont = human.atgc.df$C.cont,
A.cont = human.atgc.df$A.cont,
timer = 1,
k = kmer, NCPU = NCPU,
max.runs = max.runs,
length.of.read = readLengthSeq[i],
multiplier = multiplierSeq[i],
prob.type = "non-uniform",
seed = 1935)
if(i==1){
cor.df <- data.frame(results[[2]])
} else {
cor.df <- rbind(cor.df, results[[2]])
}
if(i==length(readLengthSeq)){
write.csv(cor.df, file = "../data/correlation-coefficient-df.csv",
row.names = FALSE)
}
# Plots of assembled sequence length distribution vs. breakage prob scores
sorted.len  <- sort(results[[3]]$assembled.seq, decreasing = TRUE)
sorted.len  <- unique(sorted.len)[1]
top.results <- as.numeric(rownames(results[[3]][which(results[[3]]$assembled.seq==sorted.len),]))
p.seq <- ggplot(results[[3]],
aes(x = prob.table, y = assembled.seq)) + geom_point() +
geom_point(data=results[[3]][top.results,],
aes(x = prob.table, y = assembled.seq), colour="red") +
labs(x = "Breakage Probability Scores", y = "Assembled Sequence Length")
p.seq <- ggMarginal(p.seq, margins = "y", type="density",
colour = "black", fill = "black", alpha = .3)
p.align.probs <- ggplot(results[[3]],
aes(x = prob.table, y = total.align.score)) + geom_point() +
geom_point(data=results[[3]][top.results,],
aes(x = prob.table, y = total.align.score), colour="red") +
labs(x = "Breakage Probability Scores", y = "Reference Alignment Scores")
combined.plots <- plot_grid(p.seq, NULL, p.align.probs,
nrow = 1,
rel_widths = c(1, 0.05, 1),
labels = c("A", "", "B"))
title <- ggdraw() + draw_label(
paste0("Seq Length: ",length,"; ",
"Kmer: ",kmer,"; ",
"Read Length: ",readLengthSeq[i]), fontface='bold')
# rel_heights values control title margins
combined.plots <- plot_grid(title, combined.plots, ncol=1, rel_heights=c(0.1, 1))
ggsave(combined.plots, width=10, height=6,
file=paste0("../figures/BP-Score_vs_Seq-Length/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# Plots of correlation coefficients of breakage probability scores vs.
# alignment scoring metrics
p1 <- ggplot(results[[1]], aes(x = probs, y = local)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$local,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[1]), "Alignment"))
p2 <- ggplot(results[[1]], aes(x = probs, y = global)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$global,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[2]), "Alignment"))
p3 <- ggplot(results[[1]], aes(x = probs, y = global.local)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$global.local,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability",
y = paste(str_to_title(gsub("[.]", "-", names(results[[2]])[3])), "Alignment"))
p4 <- ggplot(results[[1]], aes(x = probs, y = local.global)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$local.global,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability",
y = paste(str_to_title(gsub("[.]", "-", names(results[[2]])[4])), "Alignment"))
p5 <- ggplot(results[[1]], aes(x = probs, y = kmer)) + geom_point() +
geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
annotateText = paste0("r = ", round(results[[2]]$kmer,4)),
hjustvar = 0, vjustvar = 1),
aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[5]), "Alignment"))
# p6 <- ggplot(results[[1]], aes(x = probs, y = levenshtein)) + geom_point() +
#   geom_text(data = data.frame(xpos = -Inf, ypos =  Inf,
#                               annotateText = paste0("r = ", round(results[[2]]$levenshtein,4)),
#                               hjustvar = 0, vjustvar = 1),
#             aes(x = xpos, y = ypos, hjust = hjustvar, vjust = vjustvar, label = annotateText),
#             fontface = "bold") + geom_smooth(method='lm', formula= y~x) +
#   labs(x = "Breakage Probability", y = paste(str_to_title(names(results[[2]])[6]), "Alignment"))
title <- ggdraw() + draw_label(
paste0("Correlation Coefficients of Breakage Probability Scores vs. Alignment Scores",
"\n",
"Seq Length: ",length,"; ",
"Kmer: ",kmer,"; ",
"Read Length: ",readLengthSeq[i]), fontface='bold')
combined.cor.plots <- plot_grid(p1, p2, p5,
p4, p3,
nrow = 2)
# rel_heights values control title margins
combined.cor.plots <- plot_grid(title, combined.cor.plots, ncol = 1, rel_heights = c(0.1, 1))
ggsave(combined.cor.plots, width=10, height=6,
file=paste0("../figures/Correlations/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# Stacked barplot showing the percent of correctness of breakpoints vs.
# each alignment metric; we define "correctness" as a breakpoint score that is
# equal to or greater than the alignment score
percent.correctness <- ggplot(results[[5]], aes(x = ind, y = value, fill = variable)) +
geom_bar(position="stack", stat="identity") +
labs(x = "Alignment Scores Metrics", y = "Percent of correctness",
title = "Percent of correctness between breakpoints and alignment scores")
ggsave(percent.correctness, width=10, height=6,
file=paste0("../figures/Alignment_scores/",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
# density plot of read lengths
p <- ggplot(results[[6]], aes(x=reads)) +
geom_density() + lims(x = c(min(results[[6]])*0.75,max(results[[6]])*1.25)) +
labs(x = "Read Length", y = "Density",
title = "Distribution of read lengths")
ggsave(p, width=10, height=6,
file=paste0("../figures/ReadLength/ReadLength-dist-",
"Len_",length, "-",
"Kmer",kmer,"-",
"ReadLength",readLengthSeq[i],".pdf"))
}
